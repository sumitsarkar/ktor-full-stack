/*
 * This file is generated by jOOQ.
 */
package me.sumit.uptime.database.generated


import kotlin.collections.List

import me.sumit.uptime.database.generated.sequences.MONITOR_ID_SEQ
import me.sumit.uptime.database.generated.sequences.MONITOR_TYPES_ID_SEQ
import me.sumit.uptime.database.generated.tables.Monitor
import me.sumit.uptime.database.generated.tables.MonitorTypes

import org.jooq.Catalog
import org.jooq.Sequence
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Public : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC = Public()
    }

    /**
     * The table <code>public.monitor</code>.
     */
    val MONITOR get() = Monitor.MONITOR

    /**
     * The table <code>public.monitor_types</code>.
     */
    val MONITOR_TYPES get() = MonitorTypes.MONITOR_TYPES

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getSequences(): List<Sequence<*>> = listOf(
        MONITOR_ID_SEQ,
        MONITOR_TYPES_ID_SEQ
    )

    override fun getTables(): List<Table<*>> = listOf(
        Monitor.MONITOR,
        MonitorTypes.MONITOR_TYPES
    )
}
