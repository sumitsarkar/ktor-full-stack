/*
 * This file is generated by jOOQ.
 */
package me.sumit.uptime.database.generated.tables.records


import me.sumit.uptime.database.generated.tables.DropChunks

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Row1
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class DropChunksRecord() : TableRecordImpl<DropChunksRecord>(DropChunks.DROP_CHUNKS), Record1<String?> {

    var dropChunks: String?
        set(value) = set(0, value)
        get() = get(0) as String?

    // -------------------------------------------------------------------------
    // Record1 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row1<String?> = super.fieldsRow() as Row1<String?>
    override fun valuesRow(): Row1<String?> = super.valuesRow() as Row1<String?>
    override fun field1(): Field<String?> = DropChunks.DROP_CHUNKS.DROP_CHUNKS_
    override fun component1(): String? = dropChunks
    override fun value1(): String? = dropChunks

    override fun value1(value: String?): DropChunksRecord {
        this.dropChunks = value
        return this
    }

    override fun values(value1: String?): DropChunksRecord {
        this.value1(value1)
        return this
    }

    /**
     * Create a detached, initialised DropChunksRecord
     */
    constructor(dropChunks: String? = null): this() {
        this.dropChunks = dropChunks
    }
}
