/*
 * This file is generated by jOOQ.
 */
package me.sumit.uptime.database.generated.routines


import me.sumit.uptime.database.generated.Public

import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.DSL
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class GetTelemetryReport : AbstractRoutine<String>("get_telemetry_report", Public.PUBLIC, SQLDataType.CLOB) {
    companion object {

        /**
         * The parameter <code>public.get_telemetry_report.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<String?> = Internal.createParameter("RETURN_VALUE", SQLDataType.CLOB, false, false)

        /**
         * The parameter <code>public.get_telemetry_report.always_display_report</code>.
         */
        val ALWAYS_DISPLAY_REPORT: Parameter<Boolean?> = Internal.createParameter("always_display_report", SQLDataType.BOOLEAN.defaultValue(DSL.field("false", SQLDataType.BOOLEAN)), true, false)
    }

    init {
        returnParameter = RETURN_VALUE
        addInParameter(ALWAYS_DISPLAY_REPORT)
    }

    /**
     * Set the <code>always_display_report</code> parameter IN value to the routine
     */
    fun setAlwaysDisplayReport(value: Boolean?) = setValue(ALWAYS_DISPLAY_REPORT, value)

    /**
     * Set the <code>always_display_report</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    fun setAlwaysDisplayReport(field: Field<Boolean?>): Unit {
        setField(ALWAYS_DISPLAY_REPORT, field)
    }
}
