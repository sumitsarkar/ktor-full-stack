/*
 * This file is generated by jOOQ.
 */
package me.sumit.uptime.database.generated.routines


import me.sumit.uptime.database.generated.Public

import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.DSL
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


@Deprecated(message = "Unknown data type. Please define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
@Suppress("UNCHECKED_CAST")
open class CompressChunk : AbstractRoutine<Any>("compress_chunk", Public.PUBLIC, org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"regclass\"")) {
    companion object {
        @Deprecated(message = "Unknown data type. Please define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
        val RETURN_VALUE: Parameter<Any?> = Internal.createParameter("RETURN_VALUE", org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"regclass\""), false, false)
        @Deprecated(message = "Unknown data type. Please define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
        val UNCOMPRESSED_CHUNK: Parameter<Any?> = Internal.createParameter("uncompressed_chunk", org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"regclass\""), false, false)

        /**
         * The parameter <code>public.compress_chunk.if_not_compressed</code>.
         */
        val IF_NOT_COMPRESSED: Parameter<Boolean?> = Internal.createParameter("if_not_compressed", SQLDataType.BOOLEAN.defaultValue(DSL.field("false", SQLDataType.BOOLEAN)), true, false)
    }

    init {
        returnParameter = RETURN_VALUE
        addInParameter(UNCOMPRESSED_CHUNK)
        addInParameter(IF_NOT_COMPRESSED)
    }

    /**
     * Set the <code>uncompressed_chunk</code> parameter IN value to the routine
     */
    fun setUncompressedChunk(value: Any?) = setValue(UNCOMPRESSED_CHUNK, value)

    /**
     * Set the <code>uncompressed_chunk</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    fun setUncompressedChunk(field: Field<Any?>): Unit {
        setField(UNCOMPRESSED_CHUNK, field)
    }

    /**
     * Set the <code>if_not_compressed</code> parameter IN value to the routine
     */
    fun setIfNotCompressed(value: Boolean?) = setValue(IF_NOT_COMPRESSED, value)

    /**
     * Set the <code>if_not_compressed</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    fun setIfNotCompressed(field: Field<Boolean?>): Unit {
        setField(IF_NOT_COMPRESSED, field)
    }
}
