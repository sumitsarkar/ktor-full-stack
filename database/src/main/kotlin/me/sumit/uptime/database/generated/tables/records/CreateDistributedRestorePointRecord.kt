/*
 * This file is generated by jOOQ.
 */
package me.sumit.uptime.database.generated.tables.records


import me.sumit.uptime.database.generated.tables.CreateDistributedRestorePoint

import org.jooq.Field
import org.jooq.Record3
import org.jooq.Row3
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class CreateDistributedRestorePointRecord() : TableRecordImpl<CreateDistributedRestorePointRecord>(CreateDistributedRestorePoint.CREATE_DISTRIBUTED_RESTORE_POINT), Record3<String?, String?, Any?> {

    var nodeName: String?
        set(value) = set(0, value)
        get() = get(0) as String?

    var nodeType: String?
        set(value) = set(1, value)
        get() = get(1) as String?

    var restorePoint: Any?
        set(value) = set(2, value)
        get() = get(2) as Any?

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row3<String?, String?, Any?> = super.fieldsRow() as Row3<String?, String?, Any?>
    override fun valuesRow(): Row3<String?, String?, Any?> = super.valuesRow() as Row3<String?, String?, Any?>
    override fun field1(): Field<String?> = CreateDistributedRestorePoint.CREATE_DISTRIBUTED_RESTORE_POINT.NODE_NAME
    override fun field2(): Field<String?> = CreateDistributedRestorePoint.CREATE_DISTRIBUTED_RESTORE_POINT.NODE_TYPE
    @Deprecated(message = "Unknown data type. Please define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    override fun field3(): Field<Any?> = CreateDistributedRestorePoint.CREATE_DISTRIBUTED_RESTORE_POINT.RESTORE_POINT
    override fun component1(): String? = nodeName
    override fun component2(): String? = nodeType
    @Deprecated(message = "Unknown data type. Please define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    override fun component3(): Any? = restorePoint
    override fun value1(): String? = nodeName
    override fun value2(): String? = nodeType
    @Deprecated(message = "Unknown data type. Please define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    override fun value3(): Any? = restorePoint

    override fun value1(value: String?): CreateDistributedRestorePointRecord {
        this.nodeName = value
        return this
    }

    override fun value2(value: String?): CreateDistributedRestorePointRecord {
        this.nodeType = value
        return this
    }

    @Deprecated(message = "Unknown data type. Please define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
    override fun value3(value: Any?): CreateDistributedRestorePointRecord {
        this.restorePoint = value
        return this
    }

    override fun values(value1: String?, value2: String?, value3: Any?): CreateDistributedRestorePointRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        return this
    }

    /**
     * Create a detached, initialised CreateDistributedRestorePointRecord
     */
    constructor(nodeName: String? = null, nodeType: String? = null, restorePoint: Any? = null): this() {
        this.nodeName = nodeName
        this.nodeType = nodeType
        this.restorePoint = restorePoint
    }
}
