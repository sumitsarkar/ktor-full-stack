/*
 * This file is generated by jOOQ.
 */
package me.sumit.uptime.database.generated.routines


import me.sumit.uptime.database.generated.Public

import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ApproximateRowCount : AbstractRoutine<Long>("approximate_row_count", Public.PUBLIC, SQLDataType.BIGINT) {
    companion object {

        /**
         * The parameter <code>public.approximate_row_count.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<Long?> = Internal.createParameter("RETURN_VALUE", SQLDataType.BIGINT, false, false)
        @Deprecated(message = "Unknown data type. Please define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
        val RELATION: Parameter<Any?> = Internal.createParameter("relation", org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"regclass\""), false, false)
    }

    init {
        returnParameter = RETURN_VALUE
        addInParameter(RELATION)
    }

    /**
     * Set the <code>relation</code> parameter IN value to the routine
     */
    fun setRelation(value: Any?) = setValue(RELATION, value)

    /**
     * Set the <code>relation</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    fun setRelation(field: Field<Any?>): Unit {
        setField(RELATION, field)
    }
}
