/*
 * This file is generated by jOOQ.
 */
package me.sumit.uptime.database.generated.tables.pojos


import java.io.Serializable
import java.time.OffsetDateTime

import org.jooq.types.YearToSecond


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class AlterJob(
    var jobId: Int? = null, 
    var scheduleInterval: YearToSecond? = null, 
    var maxRuntime: YearToSecond? = null, 
    var maxRetries: Int? = null, 
    var retryPeriod: YearToSecond? = null, 
    var scheduled: Boolean? = null, 
    var config: String? = null, 
    var nextStart: OffsetDateTime? = null
): Serializable {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other === null)
            return false
        if (this::class != other::class)
            return false
        val o: AlterJob = other as AlterJob
        if (jobId === null) {
            if (o.jobId !== null)
                return false
        }
        else if (jobId != o.jobId)
            return false
        if (scheduleInterval === null) {
            if (o.scheduleInterval !== null)
                return false
        }
        else if (scheduleInterval != o.scheduleInterval)
            return false
        if (maxRuntime === null) {
            if (o.maxRuntime !== null)
                return false
        }
        else if (maxRuntime != o.maxRuntime)
            return false
        if (maxRetries === null) {
            if (o.maxRetries !== null)
                return false
        }
        else if (maxRetries != o.maxRetries)
            return false
        if (retryPeriod === null) {
            if (o.retryPeriod !== null)
                return false
        }
        else if (retryPeriod != o.retryPeriod)
            return false
        if (scheduled === null) {
            if (o.scheduled !== null)
                return false
        }
        else if (scheduled != o.scheduled)
            return false
        if (config === null) {
            if (o.config !== null)
                return false
        }
        else if (config != o.config)
            return false
        if (nextStart === null) {
            if (o.nextStart !== null)
                return false
        }
        else if (nextStart != o.nextStart)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.jobId === null) 0 else this.jobId.hashCode())
        result = prime * result + (if (this.scheduleInterval === null) 0 else this.scheduleInterval.hashCode())
        result = prime * result + (if (this.maxRuntime === null) 0 else this.maxRuntime.hashCode())
        result = prime * result + (if (this.maxRetries === null) 0 else this.maxRetries.hashCode())
        result = prime * result + (if (this.retryPeriod === null) 0 else this.retryPeriod.hashCode())
        result = prime * result + (if (this.scheduled === null) 0 else this.scheduled.hashCode())
        result = prime * result + (if (this.config === null) 0 else this.config.hashCode())
        result = prime * result + (if (this.nextStart === null) 0 else this.nextStart.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("AlterJob (")

        sb.append(jobId)
        sb.append(", ").append(scheduleInterval)
        sb.append(", ").append(maxRuntime)
        sb.append(", ").append(maxRetries)
        sb.append(", ").append(retryPeriod)
        sb.append(", ").append(scheduled)
        sb.append(", ").append(config)
        sb.append(", ").append(nextStart)

        sb.append(")")
        return sb.toString()
    }
}
